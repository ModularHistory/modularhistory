# When composite actions support `uses` (https://github.com/actions/runner/issues/646),
# this can be converted to a composite action. In the meantime, we are using
# https://github.com/mithro/actions-includes to allow `uses`.

name: 'Setup'
description: 'Set up Python and install dependencies'
inputs:
  os:
    description: 'Operating system'
    required: true
  python-version:
    description: 'Python version'
    required: true
runs:
  # https://github.com/mithro/actions-includes
  using: "includes"
  steps:
    # Set up Python.
    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ inputs.python-version }}
    # Modify hosts file.
    - name: Add hosts to /etc/hosts
      run: |
        sudo echo "127.0.0.1 postgres" | sudo tee -a /etc/hosts
        sudo echo "127.0.0.1 redis" | sudo tee -a /etc/hosts
      shell: bash
    # Install and configure Poetry.
    - name: Install and configure Poetry
      uses: snok/install-poetry@v1.1.2
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    # Load cached .venv, if it exists.
    - name: Cache Python virtual environment
      uses: actions/cache@v2.1.4
      id: venv-cache
      with:
        path: .venv
        key: venv-${{ inputs.os }}-${{ hashFiles('**/poetry.lock') }}
    - name: Cache node modules
      uses: actions/cache@v2.1.4
      id: node-modules-cache
      with:
        path: frontend/node_modules
        key: node-modules-${{ inputs.os }}-${{ hashFiles('**/package-lock.json') }}
    - name: Install Python dependencies
      if: steps.venv-cache.outputs.cache-hit != 'true'
      run: |
        sudo apt-get install -y graphviz graphviz-dev
        poetry install
    - name: Install JavaScript dependencies
      if: steps.node-modules-cache.outputs.cache-hit != 'true'
      run: |
        cd frontend
        npm ci
        cd ..
