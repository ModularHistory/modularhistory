name: Django CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 3
      matrix:
        python-version: [3.6, 3.7]
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run tests
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      run: |
        python manage.py migrate
        python manage.py test
  deploy:
    needs: build
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout master
      uses: actions/checkout@master
      with:
        fetch-depth: 0  # Fetch entire history so we can analyze commits since last tag
    - name: Bump version and push tag
      if: ${{ success() }}
      # https://github.com/marketplace/actions/github-tag
      uses: mathieudutour/github-tag-action@v4.5
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up Python 3.7
      if: ${{ success() }}
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Collect static files
      if: ${{ success() }}
      run: python manage.py collectstatic
    - name: Setup gcloud environment
      if: ${{ success() }}
      # https://github.com/GoogleCloudPlatform/github-actions/blob/master/setup-gcloud/README.md
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        project_id: modularhistory
        export_default_credentials: true
    - run: gcloud info
      if: ${{ success() }}
    - name: Retrieve secrets
      id: secrets
      if: ${{ success() }}
      # https://github.com/GoogleCloudPlatform/github-actions/blob/master/get-secretmanager-secrets/README.md
      uses: GoogleCloudPlatform/github-actions/get-secretmanager-secrets@master
      with:
        secrets: |-
          SECRET_TOKEN:modularhistory/SECRET_TOKEN
          DB_NAME:modularhistory/DB_NAME
          DB_USER:modularhistory/DB_USER
          DB_PASSWORD:modularhistory/DB_PASSWORD
    - name: Set environment vars
      env:
        SECRET_TOKEN: ${{steps.secrets.outputs.SECRET_TOKEN}}
        DB_NAME: ${{steps.secrets.outputs.DB_NAME}}
        DB_USER: ${{steps.secrets.outputs.DB_USER}}
        DB_PASSWORD: ${{steps.secrets.outputs.DB_PASSWORD}}
      run: gcloud info
#    - name: Create Sentry release
#      if: ${{ success() }}
#      uses: getsentry/action-release@v1.0.0
#      env:
#        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
#        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
#        SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
#      with:
#        environment: production