##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
##

# https://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size
client_max_body_size 100M;

upstream django_server {
    server django:8000;
}
upstream next_server {
    server next:3000;
}

# localhost --> modularhistory.dev.net
server {
    listen 8080;
    server_name localhost;
    location / {
        return 301 http://modularhistory.dev.net$request_uri;
    }
}

# RedisInsight: https://docs.redislabs.com/latest/ri/using-redisinsight/troubleshooting/#using-behind-a-reverse-proxy
server {
    listen 8080;
    server_name redis.modularhistory.dev.net redis.localhost;
    charset utf-8;

    # https://sandro-keil.de/blog/let-nginx-start-if-upstream-host-is-unavailable-or-down/
    resolver 127.0.0.11 valid=30s;

    location / {
        # https://sandro-keil.de/blog/let-nginx-start-if-upstream-host-is-unavailable-or-down/
        set $upstream_redisinsight http://redisinsight:8001;
        proxy_pass $upstream_redisinsight;
        proxy_set_header Host localhost:8001;  # only works with localhost & port
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

server {
    listen 8080;
    server_name modularhistory.dev.net;

    # Serve media files.
    location ~ ^/media/(.+) {
        try_files /home/modularhistory/_media/$1 @backend;
        add_header Access-Control-Allow-Origin *;
        expires 30d;  # cache in browser
    }
    
    # Serve static files.
    location ~ ^/(static/.*)/?$ {
        # Use the error page idiom to redirect to the named backend location.
        # https://www.nginx.com/resources/wiki/start/topics/depth/ifisevil/
        try_files /dev/null @backend;
    }
    
    include /modularhistory/config/nginx/routes.conf;
}
