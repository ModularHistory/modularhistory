# https://tenzer.dk/nginx-with-dynamic-upstreams/
# https://sandro-keil.de/blog/let-nginx-start-if-upstream-host-is-unavailable-or-down/
resolver 127.0.0.11 valid=30s;
set $django_server http://django:8000;
set $next_server http://next:3002;

location /error.htm {
    root /modularhistory/core/templates/;
    ssi on;
    internal;
    auth_basic off;
}

# Serve robots.txt.
location /robots.txt {
    add_header Content-Type text/plain;
    return 200 "User-agent: *\nDisallow: /admin/\nDisallow: /_admin/\n";
}

# Ignore noisy favicon.io messages.
location /favicon.ico {
    return 204;
    access_log     off;
    log_not_found  off;
}

# Route matching requests to the Django server:
# - paths beginning with `/_admin`
# - paths beginning with `/api/`, except for paths beginning with `/api/auth`
# - paths beginning with `/graphql` or `/graphiql`
# - paths beginning with `/silk`
# - /sitemap.xml
location ~ ^/(_admin.*|api/(?!auth|jsonws).*|graphi?ql.*|model-graph|silk.*|sitemap.xml)/?$ {
    # Use the error page idiom to redirect to the named backend location.
    # Note: there supposedly is no performance penalty for this.
    # https://www.nginx.com/resources/wiki/start/topics/depth/ifisevil/
    try_files /dev/null @backend;
}

# Route requests to the NextJS server.
location / {
    proxy_pass $next_server;
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;  # http in dev, https in prod
    proxy_set_header X-Real-IP $remote_addr;

    # https://stackoverflow.com/questions/18740635/nginx-upstream-timed-out-110-connection-timed-out-while-reading-response-hea
    proxy_http_version 1.1;
    proxy_set_header Connection "";

    error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error.htm;
}

location @backend {
    proxy_pass $django_server;
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;  # http in dev, https in prod
    proxy_set_header X-Real-IP $remote_addr;

    # Add a trailing slash if necessary, since Django expects trailing slashes. 
    # NOTE: This only affects requests that come through Nginx; it does not affect
    # server-side requests that go directly to the Django container (http://django:8000/...).
    rewrite ^([^.]*[^/])$ $1/ permanent;

    error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error.htm;
}
