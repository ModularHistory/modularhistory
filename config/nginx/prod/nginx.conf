##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
##

# http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_path
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC_CACHE:10m inactive=7d use_temp_path=off max_size=10g;

# https://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size
client_max_body_size 100M;

# https://docs.nginx.com/nginx/admin-guide/web-server/compression/
gzip on;
gzip_comp_level 5;
gzip_min_length 256;
gzip_proxied any;
gzip_vary on;
# gzip_buffers 16 8k;
# gzip_http_version 1.1;
gzip_types
    application/javascript
    application/json
    application/xml
    application/xml+rss
    image/bmp
    image/svg+xml
    text/css
    text/javascript
    text/plain;
    # text/html is compressed by default

upstream django_server {
    server 172.27.0.8:8000;
}
upstream react_server {
    server 172.27.0.9:3000;
}

server {
    listen $HTTP_PORT;
    server_name www.modularhistory.com modularhistory.com;
    location / {
       return 301 https://www.modularhistory.com$request_uri;
    }
}

server {
    server_name modularhistory.com www.modularhistory.com cdn.modularhistory.com;

    # Ignore noisy favicon.io messages.
    location /favicon.ico {
        return 204;
        access_log     off;
        log_not_found  off;
    }

    location /.well-known/acme-challenge/ {
        allow all;
        root /var/www/certbot;
    }

    # Serve media files.
    location /media/ {
        alias /modularhistory/_media/;
        add_header Access-Control-Allow-Origin *;
        expires 30d;  # cache in browser
    }

    # Serve static files.
    location /static/ {
        proxy_cache STATIC_CACHE;
        alias /modularhistory/_static/;
        add_header Access-Control-Allow-Origin *;
        expires 7d;  # cache in browser
    }

    # Serve robots.txt.
    location /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /admin/\nDisallow: /_admin/\n";
    }

    # Serve error page.
    location /error.htm {
        root /modularhistory/;
        ssi on;
        internal;
        auth_basic off;
    }

    # TODO: Get frontend/.next dir onto prod server first.
    # Serve Next.js static files from Nginx (instead of passing to react_server).
    # location ^~ /_next/static/ {
    #     proxy_cache STATIC_CACHE;
    #     alias /modularhistory/frontend/.next/static/;
    #     add_header Access-Control-Allow-Origin *;
    # }

    # https://sandro-keil.de/blog/let-nginx-start-if-upstream-host-is-unavailable-or-down/
    resolver 127.0.0.11 valid=30s;

    # Route matching requests to the Django server:
    # - paths beginning with `/admin` or `/_admin`
    # - paths beginning with `/api/`, except for paths beginning with `/api/auth`
    # - paths beginning with `/graphql`
    # - /sitemap.xml
    location ~ ^/(_?admin.*|api/(?!auth|jsonws).*|graphql.*|sitemap.xml) {
        proxy_pass http://django_server;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP $remote_addr;

        # The Django application expects URLs to have a trailing slash.
        # Add a trailing slash if necessary.
        rewrite ^([^.]*[^/])$ $1/ permanent;

        error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error.htm;
    }

    # Route requests to the NextJS server.
    location / {
        proxy_pass http://react_server;
        proxy_redirect off;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error.htm;
    }

    listen $HTTPS_PORT ssl;
    ssl_certificate /etc/letsencrypt/live/modularhistory.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/modularhistory.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}
