#!/bin/bash
source "$HOME/.profile"

# For debugging:
echo "Successfully pulled to $(pwd)."

changed_files="$(git diff-tree -r --name-only --no-commit-id ORIG_HEAD HEAD)"
branch=$(git branch --show-current)
prompt_to_run_setup_script=false
post_merge_hook_changed=false
setup_sha_file=".venv/.setup.sha"
poetry_sha_file=".venv/.poetry.sha"
bold=$(tput bold)
normal=$(tput sgr0)

docker system info &>/dev/null || {
  open --background -a Docker && {
    while ! docker system info &>/dev/null; do 
      echo "Waiting for Docker to start up..."; sleep 5
    done
  }
}
docker-compose ps | grep "webserver" | grep --quiet "Up" && up=true || up=false

# Determine whether to prompt to (re)run the setup script.
if [[ ! -f $setup_sha_file ]]; then
  prompt_to_run_setup_script=true
# Otherwise, if on the main branch...
elif [[ "$branch" = "main" ]]; then
  # Check if the setup script has changed since it was last run.
  # echo "$changed_files" | grep --quiet 'setup.sh' && prompt_to_run_setup_script=true
  [[ "$(head -n1 < $setup_sha_file | cut -d ' ' -f1)" == "$(shasum setup.sh | head -n1 | cut -d ' ' -f1)" ]] || prompt_to_run_setup_script=true
fi

# Update hooks.
if [[ -d config/hooks ]]; then
  for filepath in config/hooks/*; do
    filename=$(basename "$filepath")
    cmp --silent ".git/hooks/$filename" "$filepath" || {
      if [[ $filename = "post-merge" ]]; then
        # Avoid overwriting the post-merge hook from within the post-merge hook.
        echo "The post-merge hook has changed."
        post_merge_hook_changed=true
      else
        echo "Updating $filename hook..."
        cat "$filepath" > ".git/hooks/$filename"
        sudo chmod +x ".git/hooks/$filename"
        echo "Updated $filename hook."
      fi
    }
  done
fi

# If docker-compose.yml files have been updated, stop all running containers so that
# containers will have to be recreated with the updated configuration.
echo "$changed_files" | grep --quiet 'docker-compose' && docker-compose down --remove-orphans

# Update django dependencies if necessary.
echo "$changed_files" | grep --quiet 'poetry.lock' && {
  if [[ ! -f $poetry_sha_file ]]; then
    build_django=true
  elif [[ "$branch" = "main" ]]; then
    # Check if Python dependencies have changed.
    [[ "$(head -n1 < $poetry_sha_file | cut -d ' ' -f1)" == "$(shasum poetry.lock | head -n1 | cut -d ' ' -f1)" ]] || build_django=true
  fi
  if [[ $build_django = true ]]; then
    # Install dependencies.
    poetry install --no-root
    # Rebuild the django image.
    docker-compose build django
    docker-compose ps | grep --quiet 'django' && {
      # Recreate running containers.
      docker-compose up -d django
    }
    shasum poetry.lock > "$poetry_sha_file"
  fi
}

# Update Next dependencies if necessary.
echo "$changed_files" | grep --quiet 'frontend/package.*\.json' && {
    # Install dependencies in background, since no rebuild is needed afterward.
    npm i --prefix "$(git rev-parse --show-toplevel)/frontend" &
}

# Check if migrations have changed.
echo "$changed_files" | grep --quiet 'migrations/' && {
  # TODO: Determine more intelligently whether seeding is required?
  poetry run invoke db.seed --remote --migrate || {
    echo "${bold}
      The database schema has been modified.${normal} You might not 
      be able to run the django container successfully until you 
      re-seed your db. To seed your db, use this command:

        poetry run invoke db.seed --remote --migrate

    "
  }
}

# Restart any stopped containers, if containers were previously running.
[[ "$up" = true ]] && docker-compose up -d webserver

# Prompt to update hooks if necessary.
if [[ $post_merge_hook_changed = true ]]; then
  echo "${bold}
    The post-merge hook has changed.${normal} Please run the following 
    command to update the hook:
    
      poetry run invoke setup.update-git-hooks

  "
fi

# Prompt to rerun the setup script if necessary.
if [[ $prompt_to_run_setup_script = true ]]; then
  echo "${bold}
    The setup script has been modified.${normal} Your dev environment 
    might not function correctly until you run the updated 
    script. To run it, use this command:
    
      bash setup.sh

  "
fi
