# Generated by Django 3.0.1 on 2019-12-28 21:12

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='LocationTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=40, null=True, unique=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='places', to='places.Place')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_places.place_set+', to='contenttypes.ContentType')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='places.LocationTag', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('place_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='places.Place')),
            ],
            options={
                'verbose_name_plural': 'Cities',
            },
            bases=('places.place',),
        ),
        migrations.CreateModel(
            name='Continent',
            fields=[
                ('place_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='places.Place')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('places.place',),
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('place_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='places.Place')),
            ],
            options={
                'verbose_name_plural': 'Countries',
            },
            bases=('places.place',),
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('place_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='places.Place')),
            ],
            options={
                'verbose_name_plural': 'Counties',
            },
            bases=('places.place',),
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('place_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='places.Place')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('places.place',),
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('place_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='places.Place')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('places.place',),
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('place_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='places.Place')),
            ],
            options={
                'verbose_name_plural': 'Venues',
            },
            bases=('places.place',),
        ),
        migrations.AddField(
            model_name='locationtag',
            name='content_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='places.Place'),
        ),
        migrations.AddField(
            model_name='locationtag',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='places_locationtag_items', to='taggit.Tag'),
        ),
    ]
