# Generated by Django 3.0.5 on 2020-04-27 21:53

from django.db import migrations, models
import django.db.models.deletion
import functools
import gm2m.fields
import modularhistory.fields
import modularhistory.fields.file_field
import modularhistory.fields.historic_datetime_field
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('entities', '0007_auto_20200407_0910'),
        ('places', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Citation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('citation_phrase', models.CharField(blank=True, choices=[(None, ''), ('quoted in', 'quoted in'), ('cited in', 'cited in')], default=None, max_length=10, null=True)),
                ('object_id', models.PositiveIntegerField()),
                ('page_number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('end_page_number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('position', models.PositiveSmallIntegerField(blank=True, help_text='Determines the order of references.', null=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'ordering': ['position', 'source', 'page_number'],
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type2', models.CharField(blank=True, choices=[('journal', 'Journal'), ('newspaper', 'Newspaper'), ('magazine', 'Magazine')], max_length=10, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('aliases', models.CharField(blank=True, max_length=100, null=True)),
                ('description', modularhistory.fields.HTMLField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_is_circa', models.BooleanField(blank=True, default=False)),
                ('verified', models.BooleanField(blank=True, default=False)),
                ('hidden', models.BooleanField(blank=True, default=False, help_text="Don't let this item appear in search results.")),
                ('key', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('db_string', models.CharField(blank=True, max_length=500, unique=True, verbose_name='database string')),
                ('url', models.URLField(blank=True, max_length=100, null=True)),
                ('description', modularhistory.fields.HTMLField(blank=True, null=True)),
                ('date', modularhistory.fields.historic_datetime_field.HistoricDateTimeField(blank=True, null=True)),
                ('publication_date', modularhistory.fields.historic_datetime_field.HistoricDateTimeField(blank=True, null=True)),
                ('creators', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ['creators', '-date'],
            },
        ),
        migrations.CreateModel(
            name='SourceFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', modularhistory.fields.file_field.SourceFileField(blank=True, null=True, unique=True, upload_to=functools.partial(modularhistory.fields.file_field._generate_upload_path, *(), **{'path': 'sources/'}))),
                ('name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('page_offset', models.SmallIntegerField(blank=True, default=0, help_text='The difference between the page numbers displayed on the pages and the actual page numbers of the electronic file (a positive number if the electronic page number is greater than the textualpage number; a negative number if the textual page number is greater than the electronic page number).')),
                ('first_page_number', models.SmallIntegerField(blank=True, default=1, help_text='The page number that is visibly displayed on the page on which the relevant text begins (usually 1).')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('source_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sources.Source')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('editors', models.CharField(blank=True, max_length=100, null=True)),
                ('type2', models.CharField(choices=[('chapter', 'Chapter'), ('section', 'Section')], default='chapter', max_length=7)),
            ],
            options={
                'abstract': False,
            },
            bases=('sources.source', models.Model),
        ),
        migrations.CreateModel(
            name='Documentary',
            fields=[
                ('source_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sources.Source')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'verbose_name_plural': 'Documentaries',
            },
            bases=('sources.source', models.Model),
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('source_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sources.Source')),
                ('interviewers', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('sources.source',),
        ),
        migrations.CreateModel(
            name='JournalEntry',
            fields=[
                ('source_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sources.Source')),
                ('editors', models.CharField(blank=True, max_length=100, null=True)),
                ('page_number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('end_page_number', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Journal entries',
            },
            bases=('sources.source',),
        ),
        migrations.CreateModel(
            name='Piece',
            fields=[
                ('source_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sources.Source')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('editors', models.CharField(blank=True, max_length=100, null=True)),
                ('page_number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('end_page_number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('type2', models.CharField(choices=[('essay', 'Essay')], default='essay', max_length=10)),
            ],
            options={
                'abstract': False,
            },
            bases=('sources.source', models.Model),
        ),
        migrations.CreateModel(
            name='Speech',
            fields=[
                ('source_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sources.Source')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('type2', models.CharField(choices=[('address', 'address'), ('discourse', 'discourse'), ('lecture', 'lecture'), ('sermon', 'sermon'), ('speech', 'speech'), ('statement', 'statement')], default='speech', max_length=10)),
                ('audience', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Speeches',
            },
            bases=('sources.source', models.Model),
        ),
        migrations.CreateModel(
            name='WebPage',
            fields=[
                ('source_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sources.Source')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('editors', models.CharField(blank=True, max_length=100, null=True)),
                ('website_title', models.CharField(blank=True, max_length=100, null=True)),
                ('organization_name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('sources.source', models.Model),
        ),
        migrations.CreateModel(
            name='SourceContainment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('end_page_number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('position', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('phrase', models.CharField(blank=True, choices=[('', '-----'), ('archived', 'archived'), ('cited', 'cited'), ('copy', 'copy'), ('quoted', 'quoted'), ('recorded', 'recorded'), ('reproduced', 'reproduced'), ('transcribed', 'transcribed')], default='', max_length=12)),
                ('container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='container_containments', to='sources.Source')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_containments', to='sources.Source')),
            ],
            options={
                'ordering': ['position', 'source'],
            },
        ),
        migrations.CreateModel(
            name='SourceAttribution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('attributee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_attributions', to='entities.Entity')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributions', to='sources.Source')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='source',
            name='attributees',
            field=models.ManyToManyField(blank=True, related_name='attributed_sources', through='sources.SourceAttribution', to='entities.Entity'),
        ),
        migrations.AddField(
            model_name='source',
            name='containers',
            field=models.ManyToManyField(blank=True, related_name='contained_sources', through='sources.SourceContainment', to='sources.Source'),
        ),
        migrations.AddField(
            model_name='source',
            name='db_file',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sources', to='sources.SourceFile', verbose_name='file'),
        ),
        migrations.AddField(
            model_name='source',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='publications', to='places.Place'),
        ),
        migrations.AddField(
            model_name='source',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_sources.source_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='source',
            name='related',
            field=gm2m.fields.GM2MField('quotes.Quote', 'occurrences.Occurrence', blank=True, related_name='sources', through='sources.Citation', through_fields=['source', 'content_object', 'content_type', 'object_id']),
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='e.g., "L. Tom Perry Special Collections"', max_length=100, null=True)),
                ('owner', models.CharField(blank=True, help_text='e.g., "Harold B. Lee Library, Brigham Young University"', max_length=100, null=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='repositories', to='places.Place')),
            ],
            options={
                'verbose_name_plural': 'Repositories',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='e.g., "Adam S. Bennion papers"', max_length=100, null=True)),
                ('link', models.URLField(blank=True, max_length=100, null=True)),
                ('repository', models.ForeignKey(help_text='the collecting institution', on_delete=django.db.models.deletion.CASCADE, to='sources.Repository')),
            ],
            options={
                'unique_together': {('name', 'repository')},
            },
        ),
        migrations.AddField(
            model_name='citation',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citations', to='sources.Source'),
        ),
        migrations.CreateModel(
            name='Letter',
            fields=[
                ('source_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sources.Source')),
                ('editors', models.CharField(blank=True, max_length=100, null=True)),
                ('descriptive_phrase', models.CharField(blank=True, help_text='e.g., "on such-and-such letterhead" or "signed by so-and-so"', max_length=100, null=True)),
                ('collection_number', models.PositiveSmallIntegerField(blank=True, help_text='aka acquisition number', null=True)),
                ('location_info', models.CharField(blank=True, help_text='Ex: John H. Alexander Papers, Series 1: Correspondence, 1831-1848, Folder 1', max_length=400, null=True)),
                ('information_url', models.URLField(blank=True, help_text='URL for information regarding the document', max_length=100, null=True)),
                ('recipient', models.CharField(blank=True, max_length=100, null=True)),
                ('type2', models.CharField(choices=[('email', 'email'), ('letter', 'letter'), ('memorandum', 'memorandum')], default='letter', max_length=10)),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='letter', to='sources.Collection')),
            ],
            options={
                'verbose_name': 'correspondence',
                'verbose_name_plural': 'correspondence',
            },
            bases=('sources.source', models.Model),
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('source_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sources.Source')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('editors', models.CharField(blank=True, max_length=100, null=True)),
                ('descriptive_phrase', models.CharField(blank=True, help_text='e.g., "on such-and-such letterhead" or "signed by so-and-so"', max_length=100, null=True)),
                ('collection_number', models.PositiveSmallIntegerField(blank=True, help_text='aka acquisition number', null=True)),
                ('location_info', models.CharField(blank=True, help_text='Ex: John H. Alexander Papers, Series 1: Correspondence, 1831-1848, Folder 1', max_length=400, null=True)),
                ('information_url', models.URLField(blank=True, help_text='URL for information regarding the document', max_length=100, null=True)),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document', to='sources.Collection')),
            ],
            options={
                'abstract': False,
            },
            bases=('sources.source', models.Model),
        ),
        migrations.AlterUniqueTogether(
            name='citation',
            unique_together={('source', 'content_type', 'object_id', 'page_number', 'end_page_number', 'position')},
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('source_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sources.Source')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('editors', models.CharField(blank=True, max_length=100, null=True)),
                ('translator', models.CharField(blank=True, max_length=100, null=True)),
                ('publisher', models.CharField(blank=True, max_length=100, null=True)),
                ('edition_number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('edition_year', models.CharField(blank=True, max_length=4, null=True)),
                ('printing_number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('volume_number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('original_publication_date', modularhistory.fields.historic_datetime_field.HistoricDateTimeField(blank=True, null=True)),
                ('original_book', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subsequent_editions', to='sources.Book')),
            ],
            options={
                'abstract': False,
            },
            bases=('sources.source', models.Model),
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('source_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sources.Source')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('editors', models.CharField(blank=True, max_length=100, null=True)),
                ('page_number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('end_page_number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('volume', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('publication', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sources.Publication')),
            ],
            options={
                'abstract': False,
            },
            bases=('sources.source', models.Model),
        ),
        migrations.CreateModel(
            name='Affidavit',
            fields=[
                ('source_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sources.Source')),
                ('editors', models.CharField(blank=True, max_length=100, null=True)),
                ('descriptive_phrase', models.CharField(blank=True, help_text='e.g., "on such-and-such letterhead" or "signed by so-and-so"', max_length=100, null=True)),
                ('collection_number', models.PositiveSmallIntegerField(blank=True, help_text='aka acquisition number', null=True)),
                ('location_info', models.CharField(blank=True, help_text='Ex: John H. Alexander Papers, Series 1: Correspondence, 1831-1848, Folder 1', max_length=400, null=True)),
                ('information_url', models.URLField(blank=True, help_text='URL for information regarding the document', max_length=100, null=True)),
                ('certifier', models.CharField(blank=True, max_length=100, null=True)),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affidavit', to='sources.Collection')),
            ],
            options={
                'abstract': False,
            },
            bases=('sources.source', models.Model),
        ),
    ]
