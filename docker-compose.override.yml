version: "3.8"

x-common-env-vars: &common-env-vars
  DOCKERIZED: "True"
  REDIS_HOST: "redis"
  POSTGRES_HOST: "postgres"

services:
  dev:
    depends_on:
      - django
      - flower
      - react
    deploy:
      restart_policy:
        condition: on-failure
    healthcheck:
      # NOTE: This check will only work in dev environment.
      test: ["CMD", "curl", "--fail", "http://localhost"]
      interval: 1m
      timeout: 10s
      retries: 3
    hostname: modularhistory.dev.net
    image: nginx
    ports:
      - "80:80"
    volumes:
      - ./config/nginx/dev:/etc/nginx/conf.d
      - .:/modularhistory
    networks:
      default:
        ipv4_address: 172.27.0.5

  celery:
    image: django:latest
    volumes:
      - .:/modularhistory
      - ./wait-for-it.sh:/usr/local/bin/wait-for-it.sh

  celery_beat:
    image: django:latest
    volumes:
      - .:/modularhistory
      - ./wait-for-it.sh:/usr/local/bin/wait-for-it.sh

  django:
    build:
      context: .
      dockerfile: Dockerfile.django
      args:
        ENVIRONMENT: dev
    image: django:latest
    user: root
    volumes:
      - .:/modularhistory
      - ./wait-for-it.sh:/usr/local/bin/wait-for-it.sh

  # You can `docker-compose run django_helper {command}` to avoid
  # an IP address conflict with the already-running django container.
  django_helper:
    command: bash
    depends_on:
      - postgres
    env_file: .env
    environment:
      <<: *common-env-vars
      DJANGO_SETTINGS_MODULE: "core.settings"
    image: django:latest
    user: root
    volumes:
      - .:/modularhistory

  flower:
    image: django:latest
    volumes:
      - .:/modularhistory
      - ./wait-for-it.sh:/usr/local/bin/wait-for-it.sh

  github_workflow_preprocessor:
    command: sh .github/preprocess.sh
    entrypoint: ''
    image: ghcr.io/mithro/actions-includes/image:main
    user: root
    volumes:
      - .:/github/workspace
      - ./.git:/github/workspace/.git

  react:
    build:
      context: .
      dockerfile: Dockerfile.react
      args:
        ENVIRONMENT: dev
    command: npm run dev
    environment:
      NEXTAUTH_URL: "http://modularhistory.dev.net"
      REACT_EDITOR: "code"
    image: react:latest
    user: root # avoid permissions issues with writing in build dir
    volumes:
      - ./frontend:/modularhistory/frontend
      - ./frontend/node_modules:/modularhistory/frontend/node_modules
      - ./wait-for-it.sh:/usr/local/bin/wait-for-it.sh

  # run Cypress tests and exit with command
  #   docker-compose up --exit-code-from cypress
  cypress:
    # the Docker image to use from https://github.com/cypress-io/cypress-docker-images
    image: "cypress/included:7.1.0"
    depends_on:
      - dev
    environment:
      # pass base url to test pointing at the web application
      - CYPRESS_baseUrl=http://modularhistory.dev.net
    # share the current folder as volume to avoid copying
    working_dir: /e2e
    volumes:
      - ./frontend/cypress:/e2e/cypress
      - ./frontend/cypress.json:/e2e/cypress.json
