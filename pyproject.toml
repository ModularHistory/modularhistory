[build-system]
requires = ["poetry>=1.1.6"]
build-backend = "poetry.masonry.api"

[tool.black]
# https://black.readthedocs.io/en/stable/
# https://github.com/psf/black/blob/main/pyproject.toml
line-length = 94
skip-string-normalization = true
include = '\.py$'
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.cache
    | \.venv
  )/
)
'''

[tool.coverage.run]
# https://coverage.readthedocs.io/en/latest/config.html#run
omit = [".venv/", ".nox/", ".hypothesis/"]
parallel = true

[tool.coverage.html]
# https://coverage.readthedocs.io/en/latest/config.html#html
directory = ".coverage_html"

[tool.isort]
# https://github.com/timothycrosley/isort/wiki/isort-Settings
atomic = true
#default_section = "FIRSTPARTY"
include_trailing_comma = true
line_length = 94
multi_line_output = 3         # vertical hanging indent
skip_gitignore = true         # ignore files listed in .gitignore
use_parentheses = true

## TODO: Wait until mypy config bugs in pyproject.toml are resolved.
# [tool.mypy]
# python_version = 3.9
# cache_dir = ".cache/mypy"
# # https://mypy.readthedocs.io/en/stable/config_file.html#confval-check_untyped_defs
# check_untyped_defs = true
# # https://mypy.readthedocs.io/en/stable/config_file.html#confval-disallow_untyped_calls
# disallow_untyped_calls = false
# # https://mypy.readthedocs.io/en/stable/config_file.html#confval-ignore_errors
# ignore_errors = false
# # https://mypy.readthedocs.io/en/stable/config_file.html#confval-ignore_missing_imports
# ignore_missing_imports = true
# # https://mypy.readthedocs.io/en/stable/config_file.html#confval-no_implicit_optional
# no_implicit_optional = true
# show_error_codes = true
# strict_equality = true
# warn_unused_ignores = false
# warn_redundant_casts = true
# warn_unused_configs = true
# # https://mypy.readthedocs.io/en/stable/config_file.html#confval-warn_unreachable
# warn_unreachable = true
# plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]

# [[tool.mypy.overrides]]
# module = ["*.migrations.*", "__init__"]
# ignore_errors = true

# [tool.django-stubs]
# django_settings_module = "core.settings"
# ignore_missing_model_attributes = true

[tool.poetry]
name = "modularhistory"
authors = [
    "Jacob Fredericksen <jacob@modularhistory.com>",
    "Matthew Fredericksen <matthew@modularhistory.com>",
] # TODO: add others?
description = "ModularHistory (https://modularhistory.com/)"
homepage = "https://modularhistory.com/"
license = "ISC"
readme = "README.rst"
repository = "https://github.com/ModularHistory/modularhistory"
version = "0.0.1"

[tool.poetry.dependencies]
python = "~3.9.5"
aenum = "==3.1.3"
aiohttp = { extras = ["speedups"], version = "^3.7.3" }
appdirs = "^1.4"
beautifulsoup4 = "==4.10.0"
braintree = "^4.8.0"
celery = "==5.1.2"
celery-singleton = "^0.3.1"
channels = "^3.0"
channels-redis = "^3.2.0"
colorama = "^0.4.4"
django = "~3.2"
djangorestframework = "^3.12"
djangorestframework-camel-case = "^1.2.0"
djangorestframework-simplejwt = "^4.6.0"
django-admin-autocomplete-filter = "==0.7.1"
django-admin-env-notice = "^0.4"
django-admin-honeypot = "^1.1.0"
django-admin-rangefilter = "^0.8.2"
django-admin-tools = "==0.9.1"
django-autoslug = "^1.9.8"
django-cachalot = "^2.3.5"
django-celery-beat = "^2.2.0"
django-celery-results = "^2.0.1"
django-cors-headers = "3.10.0"
django-crispy-forms = "^1.10"
django-cryptography = "^1.0"
django-currentuser = "^0.5.3"
django-dbbackup = "^3.3"
django-elasticsearch-dsl = "^7.2.0"
django-elasticsearch-dsl-drf = "^0.22.1"
django-extensions = "^3.1.5"
django-filter = "^2.4.0"
django-flat-json-widget = "^0.1.2"
django-health-check = "^3.16.1"
django-imagekit = "^4.0.2"
django-image-cropping = "^1.5"
django-meta = "^2.0.0"
django-polymorphic = "^3.0.0"
django-postgresql-dag = "^0.3.1"
django-querycount = "^0.7.0"
django-redis = "^5.0.0"
django-sass-processor = "==1.0.1"
django-select2 = "==7.7.3"
django-settings-export = "==1.2.1"
django-silk = "^4.1.0"
django-split-settings = "^1.0.1"
django-storages = "^1.10"
django-trumbowyg = "^1.1.2"
django-typed-models = "==0.11.1"
django-watchman = "^1.2.0"
dj-rest-auth = { extras = ["with_social"], version = "^2.1.3" }
drf-extra-fields = "^3.1.1"
drf-writable-nested = "^0.6.3"
easy-thumbnails = "^2.7"
filemagic = "^1.6"
graphene-django = "^3.0.0b7"
gunicorn = "==20.1.0"
humanize = "^3.0"
inflect = "^5.0"
invoke = "^1.4.1"
jira = "==3.0.1"
jsonschema = "^3.2.0"
lxml = "^4.6.4"
"mega.py" = "^1.0"
millify = "^0.1.1"
natural-keys = "==2.0.0"
pafy = "==0.5.5"
pdfkit = "==0.6.1"
Pillow = "^8.0"
psutil = "^5.7.3"
psycopg2-binary = "^2.8"
pyenchant = "^3.2.0"
PyGithub = "^1.54"
pygraphviz = "^1.7"
python-dateutil = "^2.8.1"
python-decouple = "^3.3"
python-dotenv = "==0.19.0"
python-magic = "^0.4.18"
regex = "^2021.4.4"
requests = "^2.24.0"
rope = "^0.20.1"
scrubadub = "^1.2.2"
sentry-sdk = "^1.1.0"
serpy = "^0.3.1"
sigfig = "^1.1.8"
stringcase = "^1.2.0"
titlecase = "^2.3"
tomlkit = "^0.7.0"
Twisted = [
    { extras = [
        "tls",
        "http2",
    ], version = "^20.3", markers = "sys_platform != 'win32'" },
    { extras = [
        "tls",
        "http2",
        "windows_platform",
    ], version = "^20.3", markers = "sys_platform == 'win32'" },
]
uvicorn = { extras = ["standard"], version = "^0.15" }
youtube-dl = "^2021.6.6"

# TODO: Delete this after enabling [tool.poetry.group.dev.dependencies]
[tool.poetry.dev-dependencies]
# TODO: Use separate test group after it's supported in next Poetry version
# [tool.poetry.group.test.dependencies]
coverage = { extras = ["toml"], version = "^5.3" }
factory-boy = "^3.2.0"
hypothesis = { extras = ["datetime", "django", "pytest"], version = "^6.20.1" }
pytest = "^6.1"
pytest-django = "^4"
pytest-xdist = "^2.1.0"
# TODO: Use this syntax after it's supported in next Poetry version
# [tool.poetry.group.dev.dependencies]
autoflake = "^1.4"
binaryornot = "^0.4"
celery-types = "^0.9.0"
coverage-badge = "^1.0"
darglint = "^1.5.5"
django-stubs = "^1.8"
djangorestframework-stubs = ">=1.3.0"
docker-image-size-limit = "^0.4"
flake8 = "^3.8"
flake8-annotations = "^2.6.2"
flake8-bandit = "^2.1.2"
flake8-black = "^0.2.1"
flake8-broken-line = "^0.3"
flake8-bugbear = "^20.1.4"
flake8-commas = "^2.0.0"
flake8-comprehensions = "^3.3.0"
flake8-debugger = "^4.0"
flake8-django = "^1.1.1"
flake8-docstrings = "^1.5.0"
flake8-eradicate = "^1.0.0"
flake8-executable = "^2.0.4"
flake8-polyfill = "^1.0.2"
flake8-pytest-style = "^1.3"
flake8-quotes = "^3.2.0"
flake8-rst-docstrings = "^0.0.14"
flake8-string-format = "^0.3.0"
flake8-type-checking = "^1.0.2"
graphene-types = "^0.15.1"
isort = "^5.6.4"
libsass = "^0.21.0"
mypy = "^0.910"
pep8-naming = "^0.11.1"
pylint = "^2.11.1"
pyre-check = "^0.9.8"
pytype = "^2021.5.11"
rope = "^0.20.1"
safety = "^1.9"
tomlkit = "^0.7.0"
types-colorama = "^0.4.0"
types-Markdown = "^3.3.2"
types-pytz = "^2021.1.2"
types-PyYAML = "^5.4.6"
types-python-dateutil = "^2.8.0"
types-requests = "^2.25.6"
unify = "^0.5"
virtualenv-clone = "^0.5.4"
wemake-python-styleguide = "^0.15.2"
Werkzeug = "^2.0.1"
wordcloud = "^1.8.0"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra --ds='core.settings' --capture=no -p no:cacheprovider --disable-warnings"
norecursedirs = ["*env", ".nox", ".cache", ".pytype", "config"]
python_files = [
    "tests.py",
    "*_tests.py",
    "test_*.py",
    "*_test.py",
    "*_suite.py",
]
python_classes = ["Test*", "*Test", "*Tests", "*Suite"]
python_functions = ["test_*"]
filterwarnings = [
    "ignore::pytest.PytestWarning",
    "ignore:.*U.*mode is deprecated:DeprecationWarning",
]
junit_family = "legacy"
