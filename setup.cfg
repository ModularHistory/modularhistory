[flake8]
## Base flake8 configuration:
# https://flake8.pycqa.org/en/latest/user/configuration.html
statistics = False
doctests = True

## Configure plugins
max-annotation-complexity = 3
# TODO: Recommend max imports is 12
max-imports = 18
# TODO: Recommend max complexity is 6
max-complexity = 9
max-jones-score = 11
# TODO: Recommended max line complexity is 14
max-line-complexity = 19
# TODO: Recommended max cognitive complexity score is 12
max-cognitive-score = 24
# TODO: Recommended max cognitive average is 8
max-cognitive-average = 12
# TODO: Recommended max import from members is 8
max-import-from-members = 9
# TODO: Reduce max line length to 100
max-line-length = 100
# TODO: Recommended max base class count is 3
max-base-classes = 5
# TODO: Recommended max method count is 7
max-methods = 20
# TODO: Recommended max module members count is 7
max-module-members = 9
# TODO: Recommended max local variable count is 6
max-local-variables = 16
# TODO: Recommended max argument count is 5
max-arguments = 10
# Recommended try body length is 1
max-try-body-length = 3
# TODO: Recommended return count is 5
max-returns = 7
nested-classes-whitelist = FieldNames, Meta, Media, Params

# Disable some checks globally
ignore =
    # Allow missing trailing commas (as Black identifies these more discerningly)
    C812, C813, C815, C816,
    # TODO: stop ignoring the following:
    D100, D104, D106, D204, D205, D400, D401,
    # Allow using null=True on string-based fields
    DJ01,
    E203,
    E800,
    DAR103, DAR203,
    I001, I004,
    # Ignore multiline quotes with ''' (because we use them for HTML blocks)
    Q001,
    # TODO: Properly format RestructuredText docstrings and stop ignoring warnings
    RST301, RST303, RST304,
    # Ignore warnings about `input` in Python 2 (as we only use Python 3)
    S322,
    W503, W504,
    # TODO: Stop ignoring too deep nesting, too high complexity, etc.
    WPS210, WPS211, WPS213, WPS219, WPS220, WPS221, WPS223,
;    WPS226,
    # TODO: Stop ignoring too many public instance attributes
    WPS230,
    # TODO: Stop ignoring too high cognitive complexity
    WPS231,
    # TODO: Stop ignoring too high cognitive complexity
    WPS232,
    WPS300,
    WPS305,
    WPS306,
    WPS317,
    # Allow `%` string formatting (because this unfortunately is used for date format strings)
    WPS323,
    # Allow implicit string concatenation (because it's wonderful)
    WPS326,
    # TODO: Stop ignoring incorrect order of methods
    WPS338,
    # Allow vague imports (because Django has vague exports like Q and F)
    WPS347,
    # Allow starting lines with a dot (because Black does this)
    WPS348,
    # Allow unnecessary blank line before a bracket (because Black does this)
    WPS355,
    WPS407,
    WPS412,
    WPS420,
    # TODO
    WPS421,
    # Allow multiple assign targets, e.g., a = b = c = 1
    WPS429,
    # TODO
    WPS430,
    # TODO: Only ignore nested imports for type checking
    # Allow nested imports (since nested imports are sometimes required for type checking)
    WPS433,
    # TODO: Stop ignoring protected attribute usage
    WPS437,
    # TODO: Stop ignoring
    # Allow overlapping block variables + control variable used after block
    WPS440,
    WPS441,
    # TODO: Fix outer scope names shadowing
    WPS442,
    # TODO: Stop ignoring nested try blocks
    WPS505,
    WPS526,
    WPS601,
    # Ignore use of @staticmethod
    WPS602,
    WPS605,
    # Ignore use of arguments in super() call
    WPS608,
    # Ignore direct magic attribute usage (because we're using __html__)
    WPS609,
    X100

# Ignore certain errors in certain files
per-file-ignores =
    **/__init__.py: WPS201, F401
    settings.py: WPS226, WPS432, F401
    **/models.py: WPS110, WPS323, WPS601, H601
    */models/*.py: WPS110, WPS323, WPS601, H601
    **/admin.py: H601
    */admin/*.py: H601
    **/views.py: WPS125, H601
    */views/*.py: H601
    **/manager.py: WPS519
    # `assert` keyword and magic numbers for tests
    tests: S101, WPS226, WPS432
    tests.py: S101, WPS226, WPS432
    # * import for typing, etc. in MyPy check
    mypy.py: F403, F405, S107
    # subprocess running flake8
    flake8.py: S404, S603, S607
    # `print` function for hooks:
    hooks/*.py: WPS226
    config.py: WPS235
    # Format strings with unindexed params
    historic_datetime.py: P101
    historic_date_widget.py: P101
    # Magic methods (e.g., __delete__) in descriptors
    json_field.py: WPS603
    # Too many module members in pyinvoke's tasks.py
    tasks.py: WPS202

# Excluding some directories:
exclude =
    .git
    __pycache__
    *migrations*
    .venv
    .nox
    .tox
    .eggs
    *.egg
    manage.py
    clean_data.py


[isort]
# isort configuration:
# https://github.com/timothycrosley/isort/wiki/isort-Settings
include_trailing_comma = true
use_parentheses = true
default_section = FIRSTPARTY
# See https://github.com/timothycrosley/isort#multi-line-output-modes
multi_line_output = 3
line_length = 80


[darglint]
# darglint configuration:
# https://github.com/terrencepreilly/darglint
strictness = long


[tool:pytest]
# Directories that are not visited by pytest collector:
norecursedirs = hooks *.egg .eggs dist build docs .nox .tox .git .venv __pycache__

# Extra options:
addopts =
    --strict
    --tb=short
    --doctest-modules


# https://coverage.readthedocs.io/en/latest/config.html#run
[coverage:run]
omit =
    .venv/
    .nox/
    .hypothesis/

parallel = True

# https://coverage.readthedocs.io/en/latest/config.html#html
[coverage:html]
directory = .coverage_html


# https://mypy.readthedocs.io/en/latest/config_file.html
[mypy]
python_version = 3.7
check_untyped_defs = True
# TODO: consider
disallow_any_generics = False
# TODO: consider
disallow_untyped_calls = False
# TODO: consider
disallow_untyped_decorators = False
ignore_errors = False
ignore_missing_imports = True
# TODO: consider
implicit_reexport = True
# TODO: consider
no_implicit_optional = True
show_error_codes = True
# TODO: consider
strict_optional = False
strict_equality = True
warn_unused_ignores = False
warn_redundant_casts = True
warn_unused_configs = True
warn_unreachable = True
warn_no_return = True
plugins =
    mypy_django_plugin.main,
    mypy_drf_plugin.main

[mypy-*.migrations.*]
ignore_errors = True

[mypy-__init__]
ignore_errors = True

[mypy.plugins.django-stubs]
django_settings_module = "modularhistory.settings"
ignore_missing_model_attributes = True

[mypy_django_plugin]
ignore_missing_model_attributes = True


# https://github.com/chadrik/mypy-runner
[mypyrun]
;ignore =
;    not_defined,
;    return_expected,
;    return_not_expected,
;    incompatible_subclass_attr,

# Ignore certain errors in certain files
# TODO: Figure out how to block attr-defined errors only for model classes
per_file_ignores =
    */models/*.py: attr-defined, name-defined
;    # `assert` keyword and magic numbers for tests:
;    tests/*.py: S101, WPS226, WPS432

;warning_filters = regex
;
;error_filters = regex

# filter errors generated from these paths:
exclude =
    .venv/*
    manage.py
    .git
    __pycache__
    *migrations*
    .venv
    .nox
    .tox
    .eggs
    *.egg
    manage.py
    clean_data.py
