[flake8]
## Base flake8 configuration:
# https://flake8.pycqa.org/en/latest/user/configuration.html
statistics = False
doctests = True

## Configure plugins
# Recommended max annotation complexity is 3
max-annotation-complexity = 4
# TODO: Recommend max imports is 12
max-imports = 20
# TODO: Recommend max complexity is 6
max-complexity = 10
# Recommended max Jones complexity is 12
max-jones-score = 12
# TODO: Recommended max line complexity is 14
max-line-complexity = 21
# TODO: Recommended max cognitive complexity score is 12
max-cognitive-score = 30
# TODO: Recommended max cognitive average is 8
max-cognitive-average = 14
# TODO: Reduce max line length to 100
max-line-length = 119
# TODO: Recommended max base class count is 3
max-base-classes = 5
# TODO: Recommended max method count is 7
max-methods = 20
# TODO: Recommended max module members count is 7
max-module-members = 8
# TODO: Recommended max local variable count is 6
max-local-variables = 16
# TODO: Recommended max argument count is 5
max-arguments = 10
# Recommended try body length is 1
max-try-body-length = 3
# TODO: Recommended return count is 5
max-returns = 7
nested-classes-whitelist = Meta, Media, Params

# Disable some checks globally
ignore =
    # Ignore missing trailing commas
    C812, C813, C815, C816,
    # Temporarily ignore McCabe complexity  # TODO: Stop ignoring
    C901,
    D100, D104, D106, D204, D205, D400, D401,
    E800,
    DAR103,
    DAR203,
    I001,
    # Ignore multiline quotes with ''' (because we use them for HTML blocks)
    Q001,
    RST303,
    RST304,
    W504,
    # Ignore "wrong" module names like `utils`  # TODO: Stop ignoring
    WPS100,
    # TODO: Only ignore "wrong variable name" in certain files
    # Ignore "wrong variable name" (because Django uses attributes like `objects`)
    WPS110,
    WPS111,
    # TODO: Stop ignoring usage of var marked as unused
    WPS121, WPS122,
    # TODO
    WPS125,
    # TODO: Stop ignoring too many module members
    WPS202,
    # TODO: Stop ignoring too deep nesting, too high complexity, etc.
    WPS210, WPS211, WPS213, WPS219, WPS220, WPS221, WPS223, WPS226,
    # TODO: Stop ignoring too many public instance attributes
    WPS230,
    # TODO: Stop ignoring too high cognitive complexity
    WPS231,
    # TODO: Stop ignoring too high cognitive complexity
    WPS232,
    WPS300,
    WPS305,
    WPS306,
    WPS317,
    # Ignore `%` string formatting (because this unfortunately also flags date format strings)
    WPS323,
    # Ignore implicit string concatenation (because it's wonderful)
    WPS326,
    # TODO: Stop ignoring incorrect order of methods
    WPS338,
    # Ignore vague imports (because Django has vague exports like Q)
    WPS347,
    WPS407,
    WPS412,
    WPS420,
    # TODO
    WPS421,
    # TODO
    WPS430,
    # TODO: Only ignore nested imports for type checking
    # Ignore nested imports (since nested imports are sometimes required for type checking)
    WPS433,
    # TODO: Stop ignoring protected attribute usage
    WPS437,
    # TODO: Stop ignoring
    # Ignore overlapping block variables + control variable used after block
    WPS440,
    WPS441,
    # TODO: Fix outer scope names shadowing
    WPS442,
    # TODO: Stop ignoring nested try blocks
    WPS505,
    WPS526,
    WPS601,
    # Ignore use of @staticmethod
    WPS602,
    # TODO: Stop ignoring "incorrect node" (e.g., `pass`) in class body
    WPS604,
    WPS605,
    # Ignore use of arguments in super() call
    WPS608,
    # Ignore direct magic attribute usage (because we're using __html__)
    WPS609,
    X100

# Ignore certain errors in certain files
per-file-ignores =
    # imported but unused
    __init__.py: F401
    # Magic numbers and unused imports in settings.py
    settings.py: WPS432, F401
    # `%` string formatting used for app and model names
    # + shadowing class attributes (since model instances have to do this)
    models.py: WPS323, WPS601
    models/*.py: WPS323, WPS601
    # builtin shadowing, e.g., `obj`, in views
    views.py: WPS125
    # `assert` keyword and magic numbers for tests:
    tests: S101, WPS226, WPS432
    tests.py: S101, WPS226, WPS432
    # * import for typing, etc. in MyPy check
    mypy.py: F403, F405, S107
    # subprocess running flake8
    flake8.py: S404, S603, S607
    # `print` function for hooks:
    hooks/*.py: WPS226
    # Format strings with unindexed params  # TODO: Stop ignoring WPS432
    historic_datetime.py: P101, WPS432
    historic_date_widget.py: P101

# Excluding some directories:
exclude =
    .git
    __pycache__
    *migrations*
    .venv
    .eggs
    *.egg
    manage.py
    clean_data.py


[isort]
# isort configuration:
# https://github.com/timothycrosley/isort/wiki/isort-Settings
include_trailing_comma = true
use_parentheses = true
default_section = FIRSTPARTY
# See https://github.com/timothycrosley/isort#multi-line-output-modes
multi_line_output = 3
line_length = 80


[darglint]
# darglint configuration:
# https://github.com/terrencepreilly/darglint
strictness = long


[tool:pytest]
# Directories that are not visited by pytest collector:
norecursedirs = hooks *.egg .eggs dist build docs .tox .git __pycache__

# Extra options:
addopts =
    --strict
    --tb=short
    --doctest-modules


# MyPy config: https://mypy.readthedocs.io/en/latest/config_file.html
[mypy]
python_version = 3.7
check_untyped_defs = True
# TODO: consider
disallow_any_generics = False
# TODO: consider
disallow_untyped_calls = False
# TODO: consider
disallow_untyped_decorators = False
ignore_errors = False
ignore_missing_imports = True
# TODO: consider
implicit_reexport = True
# TODO: consider
no_implicit_optional = True
show_error_codes = True
# TODO: consider
strict_optional = False
strict_equality = True
warn_unused_ignores = False
warn_redundant_casts = True
warn_unused_configs = True
warn_unreachable = True
warn_no_return = True
plugins =
    mypy_django_plugin.main,
    mypy_drf_plugin.main

[mypy-*.migrations.*]
ignore_errors = True

[mypy-__init__]
ignore_errors = True

[mypy.plugins.django-stubs]
django_settings_module = "history.settings"
ignore_missing_model_attributes = True

[mypy_django_plugin]
ignore_missing_model_attributes = True


# https://github.com/chadrik/mypy-runner
[mypyrun]
ignore =
    # TODO: Figure out how to block attr-defined errors only for model classes
    attr-defined
    # Unfortunately, there are specious name-defined errors, so ...
    name-defined
;    not_defined,
;    return_expected,
;    return_not_expected,
;    incompatible_subclass_attr,

;# Ignore certain errors in certain files
;per-file-ignores =
;    # imported but unused
;    __init__.py: F401
;    # `assert` keyword and magic numbers for tests:
;    tests/*.py: S101, WPS226, WPS432
;    # `print` function for hooks:
;    hooks/*.py: WPS226

;warning_filters = regex
;
;error_filters = regex

# filter errors generated from these paths:
exclude =
    .venv/*
    manage.py
    .git
    __pycache__
    *migrations*
    .venv
    .eggs
    *.egg
    manage.py
    clean_data.py

