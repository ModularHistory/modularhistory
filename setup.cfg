[bdist_wheel]
universal=1

[flake8]
# https://flake8.pycqa.org/en/latest/user/configuration.html
doctests = True
show-source = False
statistics = False

# https://github.com/MichaelAquilina/flake8-spellcheck
dictionaries=en_US,python,technical,django
spellcheck-targets=comments

## Configure plugins
max-access-level = 5
max-annotation-complexity = 3
# TODO: Recommended max argument count is 5
max-arguments = 10
# TODO: Recommended max base class count is 3
max-base-classes = 5
# TODO: Recommended max cognitive average is 8
max-cognitive-average = 15
# TODO: Recommended max cognitive complexity score is 12
max-cognitive-score = 29
# TODO: Recommend max complexity is 6
max-complexity = 9
# TODO: Recommended max expressions is 9
max-expressions = 15
# TODO: Recommended max import from members is 8
max-import-from-members = 9
# TODO: Recommend max imports is 12
max-imports = 18
max-jones-score = 11
# TODO: Recommended max line complexity is 14
max-line-complexity = 24
# TODO: Reduce max line length to 100
max-line-length = 100
# TODO: Recommended max local variable count is 6
max-local-variables = 16
# TODO: Recommended max method count is 7
max-methods = 20
# TODO: Recommended max module members count is 7
max-module-members = 9
# Recommended try body length is 1
max-try-body-length = 3
# TODO: Recommended return count is 5
max-returns = 7
nested-classes-whitelist = FieldNames, Meta, Media, Params
# https://github.com/sco1/flake8-annotations
suppress-none-returning = True
suppress-dummy-args = True
mypy-init-return = True

# Disable some checks globally
ignore =
    # Allow missing type annotations for *args, **kwargs, self, and cls.
    ANN002, ANN003, ANN101, ANN102,
    # TODO: Stop ignoring the following:
    # ANN001, ANN201, ANN202, ANN206, ANN204,
    # Allow missing trailing commas (as Black identifies these more discerningly).
    C812, C813, C815, C816,
    # TODO: Stop allowing the following:
    D100, D104, D106,
    # https://github.com/rocioar/flake8-django#list-of-rules
    DJ01, DJ06, DJ10, DJ11,
    E203,
    # Ignore missing shebangs in executable Python files.
    EXE002,
    # Ignore "bad quotes" (because this is delegated to the `unify` tool).
    Q000,
    # Ignore multiline quotes with ''' (because we use them for HTML blocks).
    Q001,
    S322,
    # TODO: Properly format RestructuredText docstrings and stop ignoring warnings.
    RST201, RST203, RST214, RST301, RST303, RST304,
    W503, W504,
    WPS305, WPS306, WPS322, WPS326, WPS360, WPS407, WPS420,
    # TODO: Remove the following after getting rid of placeholder-related constants:
    WPS115,
    # Allow "incorrectly" formatted multi-line params (delegated to Black).
    WPS317,
    # Allow `%` string formatting (unfortunately used for date format strings).
    WPS323,
    # Allow vague imports (because Django has vague exports like Q and F).
    WPS347,
    # Allow starting lines with a dot (because Black does this).
    WPS348,
    # Allow unnecessary blank line before a bracket (because Black does this).
    WPS355,
    # Allow logic in __init__.py files (because the linter unfortunately considers imports to be logic)
    WPS412,
    # Allow multiple assign targets, e.g., a = b = c = 1
    WPS429,
    # Allow nested imports (since nested imports are sometimes required for type checking)
    WPS433,
    # WPS602: Ignore use of @staticmethod
    WPS602,
    # WPS608: Ignore use of arguments in super() call
    WPS608,

error-filters =
    Found string constant over-use: \. >
    Found string constant over-use: ,  >
    Found string constant over-use:   >
    Possible hardcoded password: ''$

# Ignore certain errors in certain files
per-file-ignores =
    **/__init__.py: WPS201, WPS300, WPS410, F401
    **/**/__init__.py: WPS201, WPS300, WPS410, F401
    admin.py: H601
    **/admin/*.py: H601, SC100
    **/documents/*.py: WPS431
    manager.py: WPS519
    models.py: WPS110, WPS323, WPS431, WPS601, H601
    **/models/*.py: WPS110, WPS323, WPS431, WPS601, H601
    serializers.py: N815
    settings.py: E501, F401, SC100, WPS226, WPS300, WPS421, WPS432
    tasks.py: SC100, WPS202, WPS421
    **/tasks/*.py: WPS421
    tests.py: S101, WPS226, WPS432, WPS421
    **/tests/*.py: S101, WPS226, WPS432, WPS421
    urls.py: E501
    views.py: WPS125, H601
    **/views/*.py: H601
    **/mypy.py: F403, F405, S107
    flake8.py: S404, S603, S607
    config/hooks/*.py: WPS226
    config.py: WPS235
    historic_datetime.py: P101
    historic_date_widget.py: P101
    json_field.py: WPS603
    **/linters/*.py: F405, SC100, WPS235, WPS421

# Excluding some directories:
exclude =
    .git
    __pycache__
    *migrations*
    .venv
    .nox
    .tox
    .eggs
    *.egg
    manage.py
    clean.py
    clean_data.py
    *boilerplates*


[darglint]
# https://github.com/terrencepreilly/darglint
strictness = long

[mypy.plugins.django-stubs]
django_settings_module = "core.settings"
ignore_missing_model_attributes = True

[mypy_django_plugin]
ignore_missing_model_attributes = True

# https://github.com/chadrik/mypy-runner
[mypyrun]
# Ignore certain errors in certain files
per_file_ignores =
    **/models/*.py: attr-defined, name-defined

ignore = 
    import

# filter errors generated from these paths:
exclude =
    .venv/*
    manage.py
    .git
    __pycache__
    *migrations*
    .venv
    .nox
    .tox
    .eggs
    *.egg
    manage.py
    clean_data.py

[nosetests]
nocapture=1
logging-level=INFO

[pytype]
# https://github.com/google/pytype#config-file
python_version = 3.9
disable = 
    import-error
