version: "3.8"

services:
  dev:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    depends_on:
      - postgres
      - redis
#      - mongo
    env_file: .env
    environment:
      - ENVIRONMENT=dev_docker
      - POSTGRES_HOST=postgres
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8000/ht/ || exit 1"]
      timeout: 7s
      interval: 15s
      retries: 2
      start_period: 10s
    ports:
      - "8080:8080"
    volumes:
      - .:/modularhistory

  # mongo:
  #   env_file: .env
  #   image: mongo
  #   ports:
  #     - "27017:27017"
  
  postgres:
    env_file: .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    image: postgres
    ports:
      - "5432:5432"
    restart: "always"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - .backups/init.sql:/docker-entrypoint-initdb.d/init.sql
  
  modularhistory:
    command: >
      sh -c "config/wait-for-it.sh postgres:5432 -- python manage.py migrate && 
             python manage.py cleanup_django_defender &&
             gunicorn modularhistory.wsgi --user www-data --bind 0.0.0.0:8000 --workers 9 --max-requests 100 --max-requests-jitter 50"
    depends_on:
      - postgres
      - redis
    env_file: .env
    environment:
      - DJANGO_SETTINGS_MODULE=modularhistory.settings
      - POSTGRES_HOST=postgres
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8000/ht/ || exit 1"]
      timeout: 7s
      interval: 15s
      retries: 2
      start_period: 10s
    image: "$IMAGE_NAME:$SHA"
    networks:
      default:
        ipv4_address: 172.27.0.6
    ports:
      - "8000:8000"
    restart: "unless-stopped"
    user: www-data
    volumes:
      - ./static:/modularhistory/static
      - ./media:/modularhistory/media
      - ./.backups:/modularhistory/.backups
      - /var/lib/lxd/storage-pools/coresvcs/containers/webserver/rootfs/etc/letsencrypt:/etc/letsencrypt
  
  redis:
    image: redis
    ports:
      - "6379:6379"
    restart: "always"
    volumes:
      - "redis:/data"

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.27.0.0/24

volumes: 
  mongo_data:
  postgres_data:
  redis:
