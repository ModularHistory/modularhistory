version: "3.8"

services:
  dev:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    depends_on:
      - db
      - redis
    env_file: .env
    environment:
      - POSTGRES_HOST=db
    ports:
      - "8000:8000"
    volumes:
      - .:/modularhistory
  
  db:
    env_file: .env
    image: postgres
    ports:
      - "5432:5432"
    restart: "always"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./config/db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
  
  modularhistory:
    build: .
    command: >
      sh -c "python manage.py findstatic styles/base.css &&
             python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             gunicorn modularhistory.wsgi --user www-data --bind 0.0.0.0:8000 --workers 9 --max-requests 100 --max-requests-jitter 50"
    depends_on:
      - db
      - redis
    env_file: .env
    environment:
      - DJANGO_SETTINGS_MODULE=modularhistory.settings
      - POSTGRES_HOST=db
    healthcheck:
      disable: true
    # image: "$IMAGE_NAME:$SHA"
    networks:
      default:
        ipv4_address: 172.27.0.6
    ports:
      - "8000:8000"
    restart: "unless-stopped"
    user: www-data
    volumes:
      - /var/lib/lxd/storage-pools/coresvcs/containers/webserver/rootfs/etc/letsencrypt:/etc/letsencrypt
      - ./static:/modularhistory/static
      - ./media:/modularhistory/media

  # nginx:
  #   depends_on:
  #     - modularhistory
  #   healthcheck:
  #     disable: true
  #   image: nginx
  #   networks:
  #     default:
  #       ipv4_address: 172.27.0.5
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   restart: "unless-stopped"
  #   volumes:
  #     - /var/lib/lxd/storage-pools/coresvcs/containers/webserver/rootfs/etc/letsencrypt:/etc/letsencrypt
  #     - ./config/nginx/conf.d:/etc/nginx/conf.d
  #     - static:/modularhistory/static
  #     - media:/modularhistory/media
  
  redis:
    image: redis
    ports:
      - "6379:6379"
    restart: "always"
    volumes:
      - "redis:/data"

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.27.0.0/24

volumes: 
  postgres_data:
  redis:
  # static:
  # media:
