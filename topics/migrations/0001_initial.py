# Generated by Django 3.0.1 on 2019-12-28 21:12

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('entities', '0001_initial'),
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('sources', '0001_initial'),
        ('occurrences', '0002_auto_20191228_2112'),
    ]

    operations = [
        migrations.CreateModel(
            name='EntityFactRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entity_fact_relations', to='entities.Entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Fact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', tinymce.models.HTMLField()),
                ('related_entities', models.ManyToManyField(related_name='facts', through='topics.EntityFactRelation', to='entities.Entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=20, unique=True)),
                ('description', tinymce.models.HTMLField(blank=True, null=True)),
                ('related_entities', models.ManyToManyField(related_name='related_topics', through='entities.EntityTopicRelation', to='entities.Entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TopicTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='topics.Topic')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics_topictag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TopicRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_type', models.CharField(max_length=20)),
                ('from_topic', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='topics_related_to', to='topics.Topic')),
                ('to_topic', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='topics_related_from', to='topics.Topic')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TopicFactRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fact_topic_relations', to='topics.Fact')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topic_fact_relations', to='topics.Topic')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='topic',
            name='related_topics',
            field=models.ManyToManyField(related_name='_topic_related_topics_+', through='topics.TopicRelation', to='topics.Topic'),
        ),
        migrations.AddField(
            model_name='topic',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='topics.TopicTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='SourceFactDerivation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveSmallIntegerField(blank=True, default=1, verbose_name='reference position')),
                ('page_number', models.CharField(blank=True, max_length=15, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('fact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fact_derivations', to='topics.Fact')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fact_derivations', to='sources.Source')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OccurrenceFactRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fact_occurrence_relations', to='topics.Fact')),
                ('occurrence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='occurrence_fact_relations', to='occurrences.Occurrence')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='fact',
            name='related_occurrences',
            field=models.ManyToManyField(related_name='facts', through='topics.OccurrenceFactRelation', to='occurrences.Occurrence'),
        ),
        migrations.AddField(
            model_name='fact',
            name='related_topics',
            field=models.ManyToManyField(related_name='facts', through='topics.TopicFactRelation', to='topics.Topic'),
        ),
        migrations.AddField(
            model_name='fact',
            name='sources',
            field=models.ManyToManyField(related_name='derived_facts', through='topics.SourceFactDerivation', to='sources.Source'),
        ),
        migrations.AddField(
            model_name='entityfactrelation',
            name='fact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fact_entity_relations', to='topics.Fact'),
        ),
    ]
