# Generated by Django 3.1.2 on 2020-10-16 01:36

import uuid

import django.db.models.deletion
import gm2m.fields
from django.db import migrations, models

import modularhistory.fields
import modularhistory.fields.json_field


class Migration(migrations.Migration):

    replaces = [
        ('quotes', '0001_initial'),
        ('quotes', '0002_quoterelation'),
        ('quotes', '0003_quote_related'),
        ('quotes', '0004_auto_20200429_0101'),
        ('quotes', '0005_remove_quote__attributee'),
        ('quotes', '0006_auto_20200430_0918'),
        ('quotes', '0007_auto_20200430_0922'),
        ('quotes', '0008_auto_20200503_0551'),
        ('quotes', '0009_quote_db_citation_html'),
        ('quotes', '0010_auto_20201013_0048'),
        ('quotes', '0011_auto_20201013_0135'),
        ('quotes', '0012_quote_db_attributee_html'),
        ('quotes', '0013_auto_20201013_0656'),
        ('quotes', '0014_quotebite_computations')
    ]

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('entities', '0007_auto_20200407_0910'),
    ]

    operations = [
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_is_circa', models.BooleanField(blank=True, default=False)),
                ('verified', models.BooleanField(blank=True, default=False)),
                ('hidden', models.BooleanField(blank=True, default=False, help_text="Don't let this item appear in search results.")),
                ('key', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('text', modularhistory.fields.HTMLField(verbose_name='Text')),
                ('bite', modularhistory.fields.HTMLField(blank=True, null=True, verbose_name='Bite')),
                ('pretext', modularhistory.fields.HTMLField(blank=True, help_text='Content to be displayed before the quote', null=True, verbose_name='Pretext')),
                ('context', modularhistory.fields.HTMLField(blank=True, help_text='Content to be displayed after the quote', null=True, verbose_name='Context')),
                ('date', modularhistory.fields.historic_datetime_field.HistoricDateTimeField(blank=True, null=True)),
                ('_attributee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quotes', to='entities.entity')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='QuoteAttribution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('attributee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quote_attributions', to='entities.entity')),
                ('quote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributions', to='quotes.quote')),
            ],
            options={
                'ordering': ['position'],
                'unique_together': {('quote', 'attributee')},
            },
        ),
        migrations.AddField(
            model_name='quote',
            name='attributees',
            field=models.ManyToManyField(blank=True, related_name='quotes2', through='quotes.QuoteAttribution', to='entities.Entity'),
        ),
        migrations.AlterUniqueTogether(
            name='quote',
            unique_together={('date', 'bite')},
        ),
        migrations.CreateModel(
            name='QuoteRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('position', models.PositiveSmallIntegerField(blank=True, help_text='Determines the order of quotes.', null=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('quote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relations', to='quotes.quote')),
            ],
            options={
                'ordering': ['position', 'quote'],
                'unique_together': {('quote', 'content_type', 'object_id', 'position')},
            },
        ),
        migrations.RemoveField(
            model_name='quote',
            name='_attributee',
        ),
        migrations.AlterField(
            model_name='quote',
            name='attributees',
            field=models.ManyToManyField(blank=True, related_name='quotes', through='quotes.QuoteAttribution', to='entities.Entity'),
        ),
        migrations.AddField(
            model_name='quote',
            name='related',
            field=gm2m.fields.GM2MField('occurrences.Occurrence', 'entities.Entity', 'quotes.Quote', blank=True, related_name='related_quotes', through='quotes.QuoteRelation', through_fields=['quote', 'content_object', 'content_type', 'object_id']),
        ),
        migrations.AddField(
            model_name='quote',
            name='computations',
            field=modularhistory.fields.json_field.JSONField(blank=True, default=dict, null=True),
        ),
        migrations.CreateModel(
            name='QuoteBite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bites', to='quotes.quote')),
                ('end', models.PositiveIntegerField(default=0)),
                ('start', models.PositiveIntegerField(default=0)),
                ('computations', modularhistory.fields.json_field.JSONField(blank=True, default=dict, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
