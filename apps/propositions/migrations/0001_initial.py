# Generated by Django 3.1.12 on 2021-06-04 07:21

import autoslug.fields
import django.db.models.deletion
from django.db import migrations, models

import apps.dates.fields
import core.fields
import core.fields.html_field
import core.fields.json_field
import core.fields.m2m_foreign_key


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name='Argument',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'type',
                    models.PositiveSmallIntegerField(
                        choices=[(None, '-------'), (1, 'deductive'), (2, 'inductive')],
                        db_index=True,
                        null=True,
                    ),
                ),
                (
                    'explanation',
                    core.fields.HTMLField(
                        blank=True,
                        paragraphed=True,
                        processed=False,
                        processor=None,
                        verbose_name='explanation',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArgumentSupport',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'position',
                    models.PositiveSmallIntegerField(blank=True, default=0, null=True),
                ),
            ],
            options={
                'verbose_name': 'support',
            },
        ),
        migrations.CreateModel(
            name='Citation',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'position',
                    models.PositiveSmallIntegerField(blank=True, default=0, null=True),
                ),
                (
                    'citation_phrase',
                    models.CharField(
                        blank=True,
                        choices=[
                            (None, '-------'),
                            ('quoted in', 'quoted in'),
                            ('cited in', 'cited in'),
                            ('partially reproduced in', 'partially reproduced in'),
                        ],
                        default=None,
                        max_length=25,
                    ),
                ),
                ('citation_html', models.TextField(blank=True)),
                ('pages', core.fields.json_field.JSONField(default=list)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ImageRelation',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'position',
                    models.PositiveSmallIntegerField(blank=True, default=0, null=True),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'position',
                    models.PositiveSmallIntegerField(blank=True, default=0, null=True),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PolymorphicProposition',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'cache',
                    core.fields.json_field.JSONField(blank=True, default=dict, null=True),
                ),
                (
                    'slug',
                    autoslug.fields.AutoSlugField(
                        blank=True,
                        editable=True,
                        populate_from='get_slug',
                        unique=True,
                        verbose_name='slug',
                    ),
                ),
                (
                    'date',
                    apps.dates.fields.HistoricDateTimeField(
                        blank=True, null=True, verbose_name='date'
                    ),
                ),
                (
                    'end_date',
                    apps.dates.fields.HistoricDateTimeField(
                        blank=True, null=True, verbose_name='end date'
                    ),
                ),
                (
                    'date_is_circa',
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text='whether the date is estimated/imprecise',
                        verbose_name='date is circa',
                    ),
                ),
                (
                    'date_string',
                    models.CharField(
                        blank=True,
                        editable=False,
                        max_length=100,
                        null=True,
                        verbose_name='date string',
                    ),
                ),
                ('verified', models.BooleanField(default=False, verbose_name='verified')),
                (
                    'title',
                    models.CharField(
                        blank=True,
                        help_text='The title can be used for the detail page header and title tag, SERP result card header, etc. It should be a noun phrase!',
                        max_length=120,
                        verbose_name='title',
                    ),
                ),
                (
                    'hidden',
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text='Hide this item from search results.',
                    ),
                ),
                (
                    'notes',
                    core.fields.HTMLField(
                        blank=True,
                        null=True,
                        paragraphed=True,
                        processed=False,
                        processor=None,
                        verbose_name='note',
                    ),
                ),
                (
                    'type',
                    models.CharField(
                        choices=[
                            ('propositions.proposition', 'proposition'),
                            ('propositions.occurrence', 'occurrence'),
                            ('propositions.birth', 'birth'),
                            ('propositions.death', 'death'),
                            ('propositions.publication', 'publication'),
                            ('composition', 'Composition'),
                            ('speech', 'Speech'),
                        ],
                        db_index=True,
                        max_length=100,
                    ),
                ),
                (
                    'summary',
                    core.fields.HTMLField(
                        paragraphed=False,
                        processed=False,
                        processor=None,
                        unique=True,
                        verbose_name='summary',
                    ),
                ),
                (
                    'elaboration',
                    core.fields.HTMLField(
                        paragraphed=True,
                        processed=True,
                        processor=core.fields.html_field.process,
                        verbose_name='elaboration',
                    ),
                ),
                (
                    'certainty',
                    models.PositiveSmallIntegerField(
                        blank=True,
                        choices=[
                            (None, '-------'),
                            (1, 'Some credible evidence'),
                            (2, 'A preponderance of evidence'),
                            (3, 'Beyond reasonable doubt'),
                            (4, 'Beyond any shadow of a doubt'),
                        ],
                        null=True,
                        verbose_name='certainty',
                    ),
                ),
                (
                    'postscript',
                    core.fields.HTMLField(
                        blank=True,
                        help_text='Content to be displayed below all related data',
                        paragraphed=True,
                        processed=True,
                        processor=core.fields.html_field.process,
                        verbose_name='postscript',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuoteRelation',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'position',
                    models.PositiveSmallIntegerField(blank=True, default=0, null=True),
                ),
                (
                    'content_object',
                    core.fields.m2m_foreign_key.ManyToManyForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='quote_relations',
                        to='propositions.polymorphicproposition',
                        verbose_name='proposition',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
