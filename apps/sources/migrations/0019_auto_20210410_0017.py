# Generated by Django 3.1.8 on 2021-04-10 00:17

import uuid

import autoslug.fields
import django.db.models.deletion
from django.db import migrations, models

import core.fields
import core.fields.historic_datetime_field
import core.fields.html_field
import core.fields.json_field


class Migration(migrations.Migration):

    dependencies = [
        ('entities', '0009_auto_20210204_0619'),
        ('places', '0002_auto_20201206_1823'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('sources', '0018_auto_20210406_0416'),
    ]

    operations = [
        migrations.CreateModel(
            name='PolymorphicSource',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'computations',
                    core.fields.json_field.JSONField(
                        blank=True, default=dict, null=True
                    ),
                ),
                (
                    'date_is_circa',
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text='whether the date is estimated/imprecise',
                        verbose_name='date is circa',
                    ),
                ),
                (
                    'verified',
                    models.BooleanField(default=False, verbose_name='verified'),
                ),
                (
                    'key',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        unique=True,
                        verbose_name='key',
                    ),
                ),
                (
                    'slug',
                    autoslug.fields.AutoSlugField(
                        blank=True,
                        editable=True,
                        null=True,
                        populate_from='get_slug',
                        unique=True,
                        verbose_name='slug',
                    ),
                ),
                (
                    'hidden',
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text='Hide this item from search results.',
                    ),
                ),
                (
                    'citation_string',
                    models.CharField(blank=True, max_length=500, unique=True),
                ),
                ('citation_html', models.TextField(blank=True)),
                (
                    'date',
                    core.fields.historic_datetime_field.HistoricDateTimeField(
                        blank=True, null=True
                    ),
                ),
                (
                    'title',
                    models.CharField(
                        blank=True, max_length=250, null=True, verbose_name='title'
                    ),
                ),
                (
                    'attributee_string',
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    'description',
                    core.fields.HTMLField(
                        blank=True,
                        null=True,
                        paragraphed=True,
                        processor=core.fields.html_field.process,
                    ),
                ),
                (
                    'url',
                    models.URLField(
                        blank=True,
                        help_text='URL where the source can be accessed online',
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    'publication_date',
                    core.fields.historic_datetime_field.HistoricDateTimeField(
                        blank=True, null=True
                    ),
                ),
                (
                    'attributees',
                    models.ManyToManyField(
                        blank=True,
                        related_name='attributed_polymorphic_sources',
                        through='sources.SourceAttribution',
                        to='entities.Entity',
                    ),
                ),
                (
                    'file',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='polymorphic_sources',
                        to='sources.sourcefile',
                        verbose_name='file',
                    ),
                ),
                (
                    'location',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='places.place',
                    ),
                ),
                (
                    'polymorphic_ctype',
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='polymorphic_sources.polymorphicsource_set+',
                        to='contenttypes.contenttype',
                    ),
                ),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Website2',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'name',
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        unique=True,
                        verbose_name='name',
                    ),
                ),
                (
                    'aliases',
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name='aliases'
                    ),
                ),
                (
                    'description',
                    core.fields.HTMLField(
                        blank=True,
                        null=True,
                        paragraphed=True,
                        processor=core.fields.html_field.process,
                        verbose_name='description',
                    ),
                ),
                (
                    'owner',
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name='owner'
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='citation',
            name='pages',
            field=core.fields.json_field.JSONField(default=list),
        ),
        migrations.AlterField(
            model_name='source',
            name='type',
            field=models.CharField(
                choices=[
                    ('sources.textualsource', 'textual source'),
                    ('sources.sourcewithpagenumbers', 'source with page numbers'),
                    ('sources.documentsource', 'document source'),
                    ('sources.document', 'document'),
                    ('sources.affidavit', 'affidavit'),
                    ('sources.piece', 'piece'),
                    ('sources.essay', 'essay'),
                    ('sources.article', 'article'),
                    ('sources.book', 'book'),
                    ('sources.sectionsource', 'section source'),
                    ('sources.section', 'section'),
                    ('sources.chapter', 'chapter'),
                    ('sources.correspondence', 'correspondence'),
                    ('sources.email', 'email'),
                    ('sources.letter', 'letter'),
                    ('sources.memorandum', 'memorandum'),
                    ('sources.spokensource', 'spoken source'),
                    ('sources.speech', 'speech'),
                    ('sources.address', 'address'),
                    ('sources.discourse', 'discourse'),
                    ('sources.lecture', 'lecture'),
                    ('sources.sermon', 'sermon'),
                    ('sources.statement', 'statement'),
                    ('sources.interview', 'interview'),
                    ('sources.journalentry', 'journal entry'),
                    ('sources.videosource', 'video source'),
                    ('sources.documentary', 'documentary'),
                    ('sources.webpage', 'web page'),
                ],
                db_index=True,
                max_length=255,
            ),
        ),
        migrations.CreateModel(
            name='PolymorphicBook',
            fields=[
                (
                    'polymorphicsource_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='sources.polymorphicsource',
                    ),
                ),
                ('editors', models.CharField(blank=True, max_length=100, null=True)),
                (
                    'original_publication_date',
                    core.fields.historic_datetime_field.HistoricDateTimeField(
                        blank=True, null=True
                    ),
                ),
                ('translator', models.CharField(blank=True, max_length=100, null=True)),
                ('publisher', models.CharField(blank=True, max_length=100, null=True)),
                (
                    'edition_number',
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    'edition_year',
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    'printing_number',
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    'volume_number',
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    'original_edition',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='subsequent_editions',
                        to='sources.polymorphicbook',
                    ),
                ),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('sources.polymorphicsource', models.Model),
        ),
        migrations.CreateModel(
            name='PolymorphicFilm',
            fields=[
                (
                    'polymorphicsource_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='sources.polymorphicsource',
                    ),
                ),
                (
                    'type',
                    models.CharField(
                        choices=[('documentary', 'Documentary')],
                        default='documentary',
                        max_length=12,
                        verbose_name='film type',
                    ),
                ),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('sources.polymorphicsource',),
        ),
        migrations.CreateModel(
            name='PolymorphicInterview',
            fields=[
                (
                    'polymorphicsource_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='sources.polymorphicsource',
                    ),
                ),
                (
                    'interviewers',
                    models.CharField(blank=True, max_length=200, null=True),
                ),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('sources.polymorphicsource',),
        ),
        migrations.CreateModel(
            name='PolymorphicSpeech',
            fields=[
                (
                    'polymorphicsource_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='sources.polymorphicsource',
                    ),
                ),
                (
                    'type',
                    models.CharField(
                        choices=[
                            ('speech', 'Speech'),
                            ('address', 'Address'),
                            ('discourse', 'Discourse'),
                            ('lecture', 'Lecture'),
                            ('sermon', 'Sermon'),
                            ('statement', 'Statement'),
                        ],
                        default='speech',
                        max_length=10,
                        verbose_name='speech type',
                    ),
                ),
                ('audience', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('sources.polymorphicsource',),
        ),
        migrations.AddField(
            model_name='citation',
            name='polymorphic_source',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='citations',
                to='sources.polymorphicsource',
            ),
        ),
        migrations.AddField(
            model_name='sourceattribution',
            name='polymorphic_source',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='attributions',
                to='sources.polymorphicsource',
                verbose_name='source',
            ),
        ),
        migrations.AddField(
            model_name='sourcecontainment',
            name='polymorphic_container',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='container_containments',
                to='sources.polymorphicsource',
            ),
        ),
        migrations.AddField(
            model_name='sourcecontainment',
            name='polymorphic_source',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='source_containments',
                to='sources.polymorphicsource',
            ),
        ),
        migrations.CreateModel(
            name='PolymorphicWebPage',
            fields=[
                (
                    'polymorphicsource_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='sources.polymorphicsource',
                    ),
                ),
                ('editors', models.CharField(blank=True, max_length=100, null=True)),
                (
                    'original_publication_date',
                    core.fields.historic_datetime_field.HistoricDateTimeField(
                        blank=True, null=True
                    ),
                ),
                (
                    'original_edition',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='subsequent_editions',
                        to='sources.polymorphicwebpage',
                    ),
                ),
                (
                    'website',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to='sources.website2',
                    ),
                ),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('sources.polymorphicsource', models.Model),
        ),
        migrations.CreateModel(
            name='PolymorphicSection',
            fields=[
                (
                    'polymorphicsource_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='sources.polymorphicsource',
                    ),
                ),
                (
                    'type',
                    models.CharField(
                        choices=[('chapter', 'Chapter'), ('section', 'Section')],
                        default='chapter',
                        max_length=10,
                        verbose_name='section type',
                    ),
                ),
                (
                    'book',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='sources.polymorphicbook',
                    ),
                ),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('sources.polymorphicsource',),
        ),
        migrations.CreateModel(
            name='PolymorphicPiece',
            fields=[
                (
                    'polymorphicsource_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='sources.polymorphicsource',
                    ),
                ),
                ('editors', models.CharField(blank=True, max_length=100, null=True)),
                (
                    'original_publication_date',
                    core.fields.historic_datetime_field.HistoricDateTimeField(
                        blank=True, null=True
                    ),
                ),
                (
                    'page_number',
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    'end_page_number',
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    'type',
                    models.CharField(
                        choices=[('essay', 'Essay')],
                        default='essay',
                        max_length=10,
                        verbose_name='piece type',
                    ),
                ),
                (
                    'original_edition',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='subsequent_editions',
                        to='sources.polymorphicpiece',
                    ),
                ),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('sources.polymorphicsource', models.Model),
        ),
        migrations.CreateModel(
            name='PolymorphicJournalEntry',
            fields=[
                (
                    'polymorphicsource_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='sources.polymorphicsource',
                    ),
                ),
                ('editors', models.CharField(blank=True, max_length=100, null=True)),
                (
                    'original_publication_date',
                    core.fields.historic_datetime_field.HistoricDateTimeField(
                        blank=True, null=True
                    ),
                ),
                (
                    'page_number',
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    'end_page_number',
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    'original_edition',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='subsequent_editions',
                        to='sources.polymorphicjournalentry',
                    ),
                ),
            ],
            options={
                'verbose_name_plural': 'journal entries',
            },
            bases=('sources.polymorphicsource', models.Model),
        ),
        migrations.CreateModel(
            name='PolymorphicDocument',
            fields=[
                (
                    'polymorphicsource_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='sources.polymorphicsource',
                    ),
                ),
                ('editors', models.CharField(blank=True, max_length=100, null=True)),
                (
                    'original_publication_date',
                    core.fields.historic_datetime_field.HistoricDateTimeField(
                        blank=True, null=True
                    ),
                ),
                (
                    'page_number',
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    'end_page_number',
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    'collection_number',
                    models.PositiveSmallIntegerField(
                        blank=True, help_text='aka acquisition number', null=True
                    ),
                ),
                (
                    'location_info',
                    models.TextField(
                        blank=True,
                        help_text='Ex: John Alexander Papers, Series 1: Correspondence, 1831-1848, Folder 1',
                        null=True,
                    ),
                ),
                (
                    'descriptive_phrase',
                    models.CharField(
                        blank=True,
                        help_text='e.g., "on such-and-such letterhead" or "signed by so-and-so"',
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    'information_url',
                    models.CharField(
                        blank=True,
                        help_text='URL for information regarding the document',
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    'collection',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='polymoprhic_polymorphicdocument',
                        to='sources.collection',
                    ),
                ),
                (
                    'original_edition',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='subsequent_editions',
                        to='sources.polymorphicdocument',
                    ),
                ),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('sources.polymorphicsource', models.Model),
        ),
        migrations.CreateModel(
            name='PolymorphicCorrespondence',
            fields=[
                (
                    'polymorphicsource_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='sources.polymorphicsource',
                    ),
                ),
                ('editors', models.CharField(blank=True, max_length=100, null=True)),
                (
                    'original_publication_date',
                    core.fields.historic_datetime_field.HistoricDateTimeField(
                        blank=True, null=True
                    ),
                ),
                (
                    'page_number',
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    'end_page_number',
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    'collection_number',
                    models.PositiveSmallIntegerField(
                        blank=True, help_text='aka acquisition number', null=True
                    ),
                ),
                (
                    'location_info',
                    models.TextField(
                        blank=True,
                        help_text='Ex: John Alexander Papers, Series 1: Correspondence, 1831-1848, Folder 1',
                        null=True,
                    ),
                ),
                (
                    'descriptive_phrase',
                    models.CharField(
                        blank=True,
                        help_text='e.g., "on such-and-such letterhead" or "signed by so-and-so"',
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    'information_url',
                    models.CharField(
                        blank=True,
                        help_text='URL for information regarding the document',
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    'type',
                    models.CharField(
                        choices=[
                            ('correspondence', 'correspondence'),
                            ('email', 'email'),
                            ('letter', 'letter'),
                            ('memorandum', 'memorandum'),
                        ],
                        default='correspondence',
                        max_length=14,
                        verbose_name='image type',
                    ),
                ),
                ('recipient', models.CharField(blank=True, max_length=100, null=True)),
                (
                    'collection',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='polymoprhic_polymorphiccorrespondence',
                        to='sources.collection',
                    ),
                ),
                (
                    'original_edition',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='subsequent_editions',
                        to='sources.polymorphiccorrespondence',
                    ),
                ),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('sources.polymorphicsource', models.Model),
        ),
        migrations.CreateModel(
            name='PolymorphicArticle',
            fields=[
                (
                    'polymorphicsource_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='sources.polymorphicsource',
                    ),
                ),
                ('editors', models.CharField(blank=True, max_length=100, null=True)),
                (
                    'original_publication_date',
                    core.fields.historic_datetime_field.HistoricDateTimeField(
                        blank=True, null=True
                    ),
                ),
                (
                    'page_number',
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    'end_page_number',
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                ('number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('volume', models.PositiveSmallIntegerField(blank=True, null=True)),
                (
                    'original_edition',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='subsequent_editions',
                        to='sources.polymorphicarticle',
                    ),
                ),
                (
                    'publication',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to='sources.publication',
                    ),
                ),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('sources.polymorphicsource', models.Model),
        ),
        migrations.CreateModel(
            name='PolymorphicAffidavit',
            fields=[
                (
                    'polymorphicsource_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='sources.polymorphicsource',
                    ),
                ),
                ('editors', models.CharField(blank=True, max_length=100, null=True)),
                (
                    'original_publication_date',
                    core.fields.historic_datetime_field.HistoricDateTimeField(
                        blank=True, null=True
                    ),
                ),
                (
                    'page_number',
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    'end_page_number',
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    'collection_number',
                    models.PositiveSmallIntegerField(
                        blank=True, help_text='aka acquisition number', null=True
                    ),
                ),
                (
                    'location_info',
                    models.TextField(
                        blank=True,
                        help_text='Ex: John Alexander Papers, Series 1: Correspondence, 1831-1848, Folder 1',
                        null=True,
                    ),
                ),
                (
                    'descriptive_phrase',
                    models.CharField(
                        blank=True,
                        help_text='e.g., "on such-and-such letterhead" or "signed by so-and-so"',
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    'information_url',
                    models.CharField(
                        blank=True,
                        help_text='URL for information regarding the document',
                        max_length=200,
                        null=True,
                    ),
                ),
                ('certifier', models.CharField(blank=True, max_length=100, null=True)),
                (
                    'collection',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='polymoprhic_polymorphicaffidavit',
                        to='sources.collection',
                    ),
                ),
                (
                    'original_edition',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='subsequent_editions',
                        to='sources.polymorphicaffidavit',
                    ),
                ),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('sources.polymorphicsource', models.Model),
        ),
    ]
