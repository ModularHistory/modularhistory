##################################
# BASE
##################################

FROM node:lts-buster AS base

LABEL org.opencontainers.image.source https://github.com/ModularHistory/modularhistory

# https://docs.docker.com/engine/reference/builder/#arg
ARG ENVIRONMENT=dev

# Create required directories.
RUN mkdir -p -- \
  /static \
  /_volumes/static \
  /_volumes/redirects

WORKDIR /app

COPY frontend/package*.json .
COPY frontend/next.config.js .
COPY .env .

##################################
# BUILDER
##################################

# https://hub.docker.com/_/node/
FROM base AS builder

ARG ENVIRONMENT

# Install project dependencies.
RUN npm set cache .npm; npm ci || (npm cache clean -f && npm ci)

# Add source code required for compiling JS.
COPY static /static
COPY frontend .

# Compile JavaScript.
RUN npm run build

##################################
# RUNNER
##################################

FROM base AS runner

# Copy the ENVIRONMENT arg from the previous stage.
ARG ENVIRONMENT

# Copy compiled JavaScript from the builder stage.
COPY --from=builder /app/.next /app/.next

# Install required dependencies.
RUN if [ "$ENVIRONMENT" = "dev" ]; then npm ci --cache .npm; else npm ci --cache .npm --production; fi

# Copy necessary files.
COPY .config/scripts/wait-for-it.sh /usr/local/bin/wait-for-it.sh

# Grant necessary permissions to non-root user.
RUN chown -R www-data:www-data /app && \
  chmod g+w /usr/local/bin/wait-for-it.sh && \
  chmod g+w -R /_volumes/static

# Make .next directory writable in dev environment.
RUN if [ "$ENVIRONMENT" = "dev" ]; then chmod g+w -R /app/.next/; fi

# Expose port 3002.
EXPOSE 3002

HEALTHCHECK --interval=30s --timeout=7s --start-period=60s --retries=3 \
  CMD curl --fail http://localhost:3002/ || exit 1

# Switch from root to non-root user.
USER www-data

CMD npm run start
