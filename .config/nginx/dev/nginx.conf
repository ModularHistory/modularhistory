##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
##

# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
# server {
#     listen 80;
#     listen [::]:80;
#
#     server_name example.com;
#
#     root /var/www/example.com;
#     index index.html;
#
#     location / {
#         try_files $uri $uri/ =404;
#     }
# }

upstream django_server {
    server django:8000;
}

upstream flower_server {
    server flower:5555;
}

upstream react_server {
    server react:3000;
}

# localhost --> modularhistory.dev.net
server {
    listen 80;
    server_name localhost;
    location / {
        return 301 http://modularhistory.dev.net$request_uri;
    }
}

# RedisInsight: https://docs.redislabs.com/latest/ri/using-redisinsight/troubleshooting/#using-behind-a-reverse-proxy
server {
    listen 80;
    server_name redis.modularhistory.dev.net redis.localhost;
    charset utf-8;

    # https://sandro-keil.de/blog/let-nginx-start-if-upstream-host-is-unavailable-or-down/
    resolver 127.0.0.11 valid=30s;

    location / {
        # https://sandro-keil.de/blog/let-nginx-start-if-upstream-host-is-unavailable-or-down/
        set $upstream_redisinsight http://redisinsight:8001;
        proxy_pass $upstream_redisinsight;
        proxy_set_header Host localhost:8001;  # only works with localhost & port
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

server {
    listen 80;
    server_name modularhistory.dev.net;

    # ignore noisy favicon.io messages
    # TODO: investigate proper solution
    location /favicon.ico {
        return 204;
        access_log     off;
        log_not_found  off;
    }

    location /error.htm {
        root /modularhistory/templates/;
        ssi on;
        internal;
        auth_basic off;
    }

    location ~ ^/flower/?.* {
        # https://flower.readthedocs.io/en/latest/config.html#url-prefix
        rewrite ^/flower/?(.*)$ /$1 break;

        sub_filter '="/' '="/flower/';
        sub_filter_last_modified on;
        sub_filter_once off;

        # https://flower.readthedocs.io/en/latest/reverse-proxy.html
        proxy_pass http://flower_server;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Routing regex for the NextJS server
    #   `|` is an "or", separates patterns
    #   `_?_next.*` matches any path starting with `_next` or `__next`
    #   `entities/?$` matches entities page (localhost/entites/)
    #      `?` is needed because the ending `/` is optional
    # To add a route, insert `|your_path/?$` before the closing parenthesis
    location ~ ^/($|_?_next.*|search/?$|entities/?$|occurrences/?$|api/auth/.*|auth/.*) {
        proxy_pass http://react_server;
        proxy_redirect off;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto http;  # https in prod
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        # https://stackoverflow.com/questions/18740635/nginx-upstream-timed-out-110-connection-timed-out-while-reading-response-hea
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error.htm;
    }

    location / {
        proxy_pass http://django_server;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto http;  # https in prod
        proxy_set_header X-Real-IP $remote_addr;

        # The Django application expects URLs to have a trailing slash.
        # Add a trailing slash if necessary.
        rewrite ^([^.]*[^/])$ $1/ permanent;

        error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error.htm;
    }
}
