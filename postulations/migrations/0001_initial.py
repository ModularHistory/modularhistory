# Generated by Django 3.1.3 on 2020-11-11 22:45

import django.db.models.deletion
from django.db import migrations, models

import modularhistory.fields
import modularhistory.fields.html_field


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('entities', '0002_auto_20201031_0814'),
        ('topics', '0004_auto_20201111_2245'),
        ('occurrences', '0005_auto_20201031_0810'),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name='EntityFactRelation',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entity_fact_relations', to='entities.entity')),
                    ],
                ),
                migrations.CreateModel(
                    name='Fact',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('text', modularhistory.fields.HTMLField(processor=modularhistory.fields.html_field.process, unique=True)),
                        ('elaboration', modularhistory.fields.HTMLField(blank=True, null=True, processor=modularhistory.fields.html_field.process)),
                        ('related_entities', models.ManyToManyField(related_name='facts', through='postulations.EntityFactRelation', to='entities.Entity')),
                    ],
                    options={
                        'abstract': False,
                    },
                ),
                migrations.CreateModel(
                    name='TopicFactRelation',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('fact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fact_topic_relations', to='postulations.fact')),
                        ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topic_fact_relations', to='topics.topic')),
                    ],
                    options={
                        'unique_together': {('topic', 'fact')},
                    },
                ),
                migrations.CreateModel(
                    name='OccurrenceFactRelation',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('fact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fact_occurrence_relations', to='postulations.fact')),
                        ('occurrence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='occurrence_fact_relations', to='occurrences.occurrence')),
                    ],
                    options={
                        'unique_together': {('fact', 'occurrence')},
                    },
                ),
                migrations.CreateModel(
                    name='FactSupport',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('supported_fact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supported_fact_supports', to='postulations.fact')),
                        ('supportive_fact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supportive_fact_supports', to='postulations.fact')),
                    ],
                    options={
                        'unique_together': {('supported_fact', 'supportive_fact')},
                    },
                ),
                migrations.AddField(
                    model_name='fact',
                    name='related_occurrences',
                    field=models.ManyToManyField(related_name='facts', through='postulations.OccurrenceFactRelation', to='occurrences.Occurrence'),
                ),
                migrations.AddField(
                    model_name='fact',
                    name='related_topics',
                    field=models.ManyToManyField(related_name='facts', through='postulations.TopicFactRelation', to='topics.Topic'),
                ),
                migrations.AddField(
                    model_name='fact',
                    name='supportive_facts',
                    field=models.ManyToManyField(related_name='supported_facts', through='postulations.FactSupport', to='postulations.Fact'),
                ),
                migrations.AddField(
                    model_name='entityfactrelation',
                    name='fact',
                    field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fact_entity_relations', to='postulations.fact'),
                ),
                migrations.AlterUniqueTogether(
                    name='entityfactrelation',
                    unique_together={('fact', 'entity')},
                ),
            ],
            database_operations=[]
        ),
    ]